plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'maven-publish'
    id 'org.jetbrains.dokka'
}

group = "com.uploadcare.android.library"

android {
    compileSdkVersion versions.compile_sdk

    defaultConfig {
        minSdkVersion versions.min_sdk
        targetSdkVersion versions.target_sdk
        versionCode 12
        versionName "${version}"
        buildConfigField 'String', 'VERSION_NAME', "\"${version}\""
    }

    androidExtensions {
        // Enable experimental Kotlin features in gradle to enable Parcelize
        // https://github.com/Kotlin/KEEP/blob/master/proposals/extensions/android-parcelable.md
        experimental = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility versions.jdk
        targetCompatibility versions.jdk
    }

    kotlinOptions {
        jvmTarget = versions.jdk
    }

    dokkaHtml.configure {
        dokkaSourceSets {
            named("main") {
                outputDirectory.set(buildDir.resolve("javadoc"))
                sourceRoots.setFrom(file("src/main/java"))
                noAndroidSdkLink.set(false)
                skipEmptyPackages.set(true)
                includeNonPublic.set(false)
            }
        }
    }

}

dependencies {
    testImplementation "junit:junit:$versions.junit"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlin_coroutines"
    implementation "com.squareup.moshi:moshi:$versions.moshi"
    implementation "com.squareup.moshi:moshi-adapters:$versions.moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$versions.moshi"
    implementation "androidx.annotation:annotation:$versions.annotation"
    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttp"
}

// Make sure unit tests always run when we are building the code.
tasks.named("build") {
    dependsOn(tasks.named("check"))
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from(components["release"])

                groupId = project.group
                artifactId = "uploadcare-android"
                version = project.version
                description = "Android client library for the Uploadcare API."

                //withBuildIdentifier(), available in newer gradle versions.

                pom {
                    name.set("uploadcare-android")
                    url.set("https://github.com/uploadcare/uploadcare-android")
                    issueManagement {
                        url.set("https://github.com/uploadcare/uploadcare-android/issues")
                    }
                    licenses {
                        license {
                            name.set("The Apache License, Version 2.0")
                            url.set("https://www.apache.org/licenses/LICENSE-2.0.txt")
                        }
                    }
                    scm {
                        connection.set("scm:git:git://github.com/uploadcare/uploadcare-android.git")
                        developerConnection.set("scm:git:ssh://github.com/uploadcare/uploadcare-android.git")
                        url.set("https://github.com/uploadcare/uploadcare-android")
                    }
                }
            }
        }
    }
}
